// ###Mixins

// Sets container styles
@mixin container {
  width: 100%;
  max-width: $grid-max-width;
  @include clear;
}

// Sets grid column width
@mixin span($cols: 4, $padding: true) {
  $column-width: $cols / $grid-columns;
  @if $padding != false {
  padding-left: $grid-padding;
  padding-right: $grid-padding;
  }
  width: percentage($column-width);
  float: left;
}

// Sets grid column width (with gutter)
@mixin col($cols: 4, $gutter: false) {
  $column-width: $cols / $grid-columns;
  @if $gutter != false {
    $single-col: (100% - ($grid-gutter * ($grid-columns - 1))) / $grid-columns;
    width: ($single-col * $cols) + ($grid-gutter * ($cols - 1));
    margin-left: percentage($grid-gutter / 100);
    &:first-child {
      margin-left: 0;
    }
    &:last-child {
      float: right;
    }
  }@else {
    width: percentage($column-width);
  }
  float: left;
}

// Sets grid offet margin
@mixin offset($cols: 4) {
  margin-left: percentage($cols/$grid-columns)
}

// Wraps interior content in a media query
@mixin breakpoint($querystring) {
  @media #{$querystring} {
    @content;
  }
}

// Renders fully prefixed transistion
@mixin transition ($property: 0.15s) {
    @include prefixer(transition, $property, webkit moz ms);
}

// Renders fully prefixed transform
@mixin transform($property: none) {
  @include prefixer(transform, $property, webkit moz ms);
}

// Renders fully prefixed box-sizing
@mixin box-sizing ($box) {
  @include prefixer(box-sizing, $box, webkit moz);
}

// Utility for prefixing mixins
@mixin prefixer($property, $value, $prefixes: webkit moz) {
  @each $prefix in $prefixes {
    #{"-" + $prefix + "-" + $property}: $value;
  }
  #{$property}: $value;
}

// Sets ellipsis overflow
@mixin ellipsis($width: 100%) {
  display: inline-block;
  max-width: $width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Clearfix include
@mixin clear($extend: true) {
  @if $extend {
    @extend %clear;
  }
  @else {
    #{'&'}:after {
    content:"";
    display:table;
    clear:both;
    }
  }
}

// Placeholder for clear
%clear:after {
  content:"";
  display:table;
  clear:both;
}

// Text hider

@mixin hide-text($extend: true) {
  @if $extend {
    @extend %hide-text;
  }
  @else {
  overflow:hidden;
  text-indent: 100%;
  white-space: nowrap;
  }
}

// Placeholder for hide-text
%hide-text {
  overflow:hidden;
  text-indent: 100%;
  white-space: nowrap;
}

// Inline List

@mixin inline-list($float: true) {
    list-style-type:none;
    padding:0;
    margin:0;
    overflow:hidden;
    > li{
        @if $float == true {
        display:block;
        float:left;
      } @else {
        display: inline-block;
      }
    }
}